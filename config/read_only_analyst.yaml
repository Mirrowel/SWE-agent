# Configuration for SWE-agent with image viewing capabilities
# This extends the default config with image parsing history processor
# and the image_tools bundle for viewing images as base64-encoded markdown.
agent:
  model:
    name: openai/gemini/gemini-2.5-pro # or any other model you want to use
    api_base: http://127.0.0.1:8000/v1
    api_key: VerysecretKey
    per_instance_cost_limit: 0   
    total_cost_limit: 0
    per_instance_call_limit: 100
    max_input_tokens: 250000
  templates:
    disable_image_processing: false
    system_template: |-
      You are a helpful assistant that can interact with a computer to solve tasks.
    instance_template: |-
      I have cloned the repository `{{repo}}` into the `{{working_dir}}` directory.

      Here are the tools you can use:
      <tools>
      {{command_docs}}
      </tools>

      A user has submitted the following issue:
      <issue_description>
      {{problem_statement}}
      </issue_description>

      Your task is to act as an expert software engineering analyst. You must:
      1.  Thoroughly analyze the repository to understand the code and the context of the issue. Use the available tools to inspect the relevant files.
      2.  Identify the root cause of the problem described in the issue.
      3.  Formulate a concrete code fix that resolves the issue.
      4.  Once you are confident in your analysis and solution, you must use the `comment` tool to provide a comprehensive response.

      Your final response in the `comment` tool should include:
      - A clear explanation of the problem's root cause.
      - The complete, corrected code block or a diff that shows your proposed changes.

      Remember: You are in read-only mode. You cannot modify the repository files directly. Your final action must be the `comment` tool.

    next_step_template: |-
      OBSERVATION:
      {{observation}}
    next_step_no_output_template: |-
      Your command ran successfully and did not produce any output.
    max_observation_length: 10_000_000  # need longer for images
  tools:
    env_variables:
      WINDOW: 100
    execution_timeout: 300  # need longer for builds
    bundles:
      - path: tools/registry
      #- path: tools/edit_anthropic
      - path: tools/image_tools  # lets models view image files
      #- path: tools/web_browser  # browser tool for interacting with web servers
      #- path: tools/review_on_submit_m
      - path: tools/search
      - path: tools/filemap
      - path: tools/diff_state
      - path: tools/forfeit
      - path: tools/windowed
      - path: tools/windowed_edit_replace
      #- path: tools/windowed_edit_rewrite
    registry_variables:
      USE_FILEMAP: 'true'
      SUBMIT_REVIEW_MESSAGES:
        - |
          Thank you for your work on this issue. Please carefully follow the steps below to help review your changes.

          1. If you made any changes to your code after running the reproduction script, please run the reproduction script again.
            If the reproduction script is failing, please revisit your changes and make sure they are correct.
            If you have already removed your reproduction script, please ignore this step.
          2. Remove your reproduction script (if you haven't done so already).
          3. If you have modified any TEST files, please revert them to the state they had before you started fixing the issue.
            You can do this with `git checkout -- /path/to/test/file.py`. Use below <diff> to find the files you need to revert.
          4. Run the submit command again to confirm.

          Here is a list of all of your changes:

          <diff>
          {{diff}}
          </diff>
    enable_bash_tool: false
    parse_function:
      type: function_calling
  history_processors:
    - type: image_parsing  # parses base64 encoded images in the observation
    # - type: cache_control  # enable for claude
    #   last_n_messages: 2  # enable for claude
#instances:
  #type: swe_bench
  #subset: multimodal
  #split: dev
  #shuffle: true
  # filter: processing__p5.js-6069
